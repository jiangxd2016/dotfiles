{
  "files.eol": "\n",
  "files.autoSaveDelay": 500,
  "files.insertFinalNewline": true,
  "files.simpleDialog.enable": true,
  "update.mode": "none",
  // file header 暂时弃用
  "fileheader.customMade": {
    "Author": "jiangxd<jiangxd2016@gmail.com>",
    "Date": "Do not edit", // 设置后默认设置文件生成时间
    "LastEditTime": "Do not edit", // 设置后，保存文件更改默认更新最后编辑时间
    "LastEditors": "jiangxd<jiangxd2016@gmail.com>", // 设置后，保存文件更改默认更新最后编辑人
    "Description": "",
    "FilePath": "Do not edit" // 设置后，默认生成文件相对于项目的路径
  },
  // vim config
  // "vim.foldfix": true,
  "vim.hlsearch": true, // 搜索后高亮显示匹配内容
  "vim.incsearch": true, // 自动翻页
  "vim.easymotion": true, // ex  <leader><leader>s<char> <-- 快速跳转到指定字符位置
  "vim.useCtrlKeys": false, // 关闭vim的一些ctrl键命令
  "vim.useSystemClipboard": true, // 使用系统剪切板
  "vim.camelCaseMotion.enable": true, // // 启用对驼峰命名法（CamelCase）和下划线命名法（underscore_notation）的智能移动支持
  // "vim.vimrc.enable": false,
  // "vim.vimrc.path": "$HOME/.vsvimrc",
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    // vim
    {
      "before": [
        "J"
      ],
      "after": [
        "5",
        "j"
      ]
    },
    {
      "before": [
        "K"
      ],
      "after": [
        "5",
        "k"
      ]
    },
    {
      "before": [
        "H"
      ],
      "after": [
        "^"
      ]
    },
    {
      "before": [
        "L"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        "g",
        "["
      ],
      // 上一个有疑问的地方
      "commands": [
        "editor.action.marker.prevInFiles"
      ]
    },
    {
      "before": [
        "g",
        "d"
      ],
      // 跳转到定义
      "commands": [
        "editor.action.revealDefinition"
      ]
    },
    {
      "before": [
        "g",
        "r"
      ],
      // 跳转到引用
      "commands": [
        "editor.action.goToReferences"
      ]
    },
    {
      "before": [
        "g",
        "i"
      ],
      // 跳转到变量类型的定义
      "commands": [
        "editor.action.revealTypeDefinition"
      ]
    },
    {
      "before": [
        "g",
        "]"
      ],
      // 下一个有问题的地方
      "commands": [
        "editor.action.marker.nextInFiles"
      ]
    },
    {
      "before": [
        "g",
        "x",
        "x"
      ],
      // 关闭其他标签
      "commands": [
        "workbench.action.closeOtherEditors"
      ]
    },
    {
      "before": [
        "<leader>",
        "f"
      ],
      // 格式化文档
      "commands": [
        "editor.action.formatDocument"
      ]
    },
    {
      "before": [
        "<leader>",
        "r"
      ],
      // -- run
      "commands": [
        "workbench.action.files.save",
        "workbench.action.debug.run"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
        "r"
      ],
      // debug run 
      "commands": [
        "workbench.action.files.save",
        "workbench.action.debug.start"
      ]
    },
    // -- debug
    {
      "before": [
        "<leader>",
        "d",
        "b"
      ],
      // 切换断点
      "commands": [
        "editor.debug.action.toggleBreakpoint"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
        "c"
      ],
      // 添加条件断点
      "commands": [
        "editor.debug.action.conditionalBreakpoint"
      ]
    },
    // -- problem nav
    {
      "before": [
        "<leader>",
        "d",
        "k"
      ],
      // 转到上一个问题
      "commands": [
        "editor.action.marker.prev"
      ]
    },
    {
      "before": [
        "<leader>",
        "d",
        "j"
      ],
      // 转到下一个问题
      "commands": [
        "editor.action.marker.next"
      ]
    },
    // -- git hunk nav
    {
      "before": [
        "<leader>",
        "k"
      ],
      // 显示上一个更改
      "commands": [
        "workbench.action.editor.previousChange",
        "editor.action.dirtydiff.previous"
      ]
    },
    {
      "before": [
        "<leader>",
        "j"
      ],
      // 显示下一个更改
      "commands": [
        "workbench.action.editor.nextChange",
        "editor.action.dirtydiff.next"
      ]
    },
    // -- rename symbol
    {
      "before": [
        "<leader>",
        "r",
        "n"
      ],
      "commands": [
        "editor.action.rename"
      ]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  /* vim settings end */
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    // 带有vim插件的vscode,它的Ctrl+w是由vscode控制，非vim插件扩展快捷键控制。若改为true,则就是了。
    "<C-w>": false
  },
  // 自动切换输入法
  // windows上一定要安装2种输入法
  // 进入cmder/powershell之类的终端（最快的方法是在 C:\im-select 文件夹下，shift+右键，出现一个在poworshell下打开）
  // 分别切换你的输入法(中文 和英文) , 然后运行.\im-select.exe，理论上你应该得到两个不同的数字，比如我的英文是1033, 中文（搜狗输入法）是2052

  "vim.autoSwitchInputMethod.enable": true,
  "vim.searchHighlightColor": "#5f00af",
  "vim.autoSwitchInputMethod.defaultIM": "1033",
  "vim.autoSwitchInputMethod.obtainIMCmd": "D:\\im-select.exe",
  "vim.autoSwitchInputMethod.switchIMCmd": "D:\\im-select.exe {im}",
  "workbench.startupEditor": "none",
  "terminal.explorerKind": "external",
  "terminal.integrated.fontFamily": "monospace",
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/.nuxt": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/node_modules": true,
    "**/out/**": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true
  },
  "security.workspace.trust.untrustedFiles": "open",
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,
  "editor.linkedEditing": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.accessibilitySupport": "off",
  "editor.formatOnSave": false,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll.stylelint": "explicit"
  },
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "vue",
    "html",
    "markdown",
    "json",
    "jsonc",
    "yaml"
  ],
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 10,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.untrackedChanges": "separate",
  "prettier.enable": false,
  "explorer.confirmDragAndDrop": false,
  "extensions.experimental.affinity": {
    "bradlc.vscode-tailwindcss": 1,
    "vscodevim.vim": 2,
    "csstools.postcss": 3,
    "eamodio.gitlens": 7,
    "antfu.unocss": 8,
    "hollowtree.vue-snippets": 9
  },
  "files.associations": {
    "*.css": "css"
  },
  "workbench.editor.empty.hint": "hidden",
  "window.commandCenter": false,
  "svg.preview.mode": "svg",
  "javascript.updateImportsOnFileMove.enabled": "never",
  "git.openRepositoryInParentFolders": "always",
  "editor.stickyScroll.enabled": false,
  "terminal.external.windowsExec": "",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "workbench.settings.applyToAllProfiles": [
    "editor.fontFamily"
  ],
  "editor.fontSize": 13,
  "explorer.confirmDelete": false,
  "files.autoSave": "onWindowChange",
  "git.ignoreRebaseWarning": true,
  "editor.fontFamily": "JetBrains Mono, Consolas",
  "typescript.tsserver.maxTsServerMemory": 16384,
  "gitlens.advanced.messages": {
    "suppressLineUncommittedWarning": true
  },
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.persistentSessionScrollback": 1000,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "i18n-ally.displayLanguage": "zh",

  "workbench.iconTheme": "material-icon-theme",
  "workbench.colorTheme": "One Dark Pro",
  "codeium.enableConfig": {
    "*": true,
    "plaintext": true
  },


}
